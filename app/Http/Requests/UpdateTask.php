<?php

namespace App\Http\Requests;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateTask extends FormRequest
{
//    protected $errorBag = 'update';

    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'name' => 'required|max:255',
            'project_id' => [
                'required',
                'integer',
                Rule::exists('projects','id')->whereIn('id',$this->user()->projects()->pluck('id')->toArray())
            ]
        ];
    }

    public function messages()
    {
        return [
            'name.required'=>'任务名称不能为空',
            'name.max'=>'任务名称长度不能大于255',
            'project_id.required'=>'没有提交当前任务所属的项目ID',
            'project_id.integer'=>'所提交的项目ID无效（非整数）',
            'project_id.exists'=>'所提交的项目ID无效（不存在）',
        ];
    }

    protected function failedValidation(Validator $validator)
    {
        $this->errorBag = 'update-'.$this->route('task');
        parent::failedValidation($validator); // TODO: Change the autogenerated stub
    }


}
